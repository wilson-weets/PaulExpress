var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import { Button, Classes, Intent, Icon } from "@blueprintjs/core";
import { IconNames } from "@blueprintjs/icons";
import React from "react";
import styled from "styled-components";
import { StyledCard } from "./StyledCard";
var Container = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  width: 100%;\n  height: 100%;\n  align-self: stretch;\n  padding: 1em;\n  overflow: auto;\n"], ["\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  width: 100%;\n  height: 100%;\n  align-self: stretch;\n  padding: 1em;\n  overflow: auto;\n"])));
var TitleContainer = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  display: flex;\n  flex-direction: row;\n  flex: 0.05;\n  justify-content: space-between;\n  vertical-align: center;\n  margin-bottom: 0.25rem;\n"], ["\n  display: flex;\n  flex-direction: row;\n  flex: 0.05;\n  justify-content: space-between;\n  vertical-align: center;\n  margin-bottom: 0.25rem;\n"])));
var RightElemetContainer = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  align-self: flex-end;\n  margin-right: 1rem;\n"], ["\n  align-self: flex-end;\n  margin-right: 1rem;\n"])));
export var Page = function (props) {
    var title = props.title, children = props.children, _a = props.withCard, withCard = _a === void 0 ? false : _a, rightElement = props.rightElement, onGoBack = props.onGoBack;
    return (React.createElement(Container, null,
        (title || rightElement) && (React.createElement(TitleContainer, null,
            React.createElement("h1", { className: Classes.HEADING, style: { display: "flex", lineHeight: "35px" } },
                onGoBack && (React.createElement(Button, { intent: Intent.PRIMARY, minimal: true, large: true, onClick: onGoBack },
                    React.createElement(Icon, { icon: IconNames.CHEVRON_LEFT, iconSize: 30 }))),
                title),
            React.createElement(RightElemetContainer, null, rightElement && rightElement()))),
        withCard ? React.createElement(StyledCard, { fullheight: "true" }, children) : children));
};
var templateObject_1, templateObject_2, templateObject_3;
