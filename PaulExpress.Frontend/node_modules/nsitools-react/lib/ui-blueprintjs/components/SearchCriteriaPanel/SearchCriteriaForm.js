var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
import React, { useState } from "react";
import { Classes, Popover, Menu, Button, Position, MenuItem, Intent } from "@blueprintjs/core";
import styled from "styled-components";
import { FilterCriteriaBase } from "./FilterCriteriaBase";
import { IconNames } from "@blueprintjs/icons";
import voca from "voca";
import { FilterCriteriaInfoTypeEnum } from "./types";
import { useTranslation } from "react-i18next";
var FormAlignContainer = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  & .", " {\n    /* width: 100%; */\n  }\n  & .", " {\n    min-width: 150px;\n    text-align: right;\n  }\n"], ["\n  & .", " {\n    /* width: 100%; */\n  }\n  & .", " {\n    min-width: 150px;\n    text-align: right;\n  }\n"])), Classes.FORM_CONTENT, Classes.LABEL);
var BottomButtonsContainer = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n"], ["\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n"])));
var Container = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  border-bottom: 1px solid lightgray;\n  padding-bottom: 1rem;\n  margin-bottom: 0.5em;\n"], ["\n  border-bottom: 1px solid lightgray;\n  padding-bottom: 1rem;\n  margin-bottom: 0.5em;\n"])));
var getInitialState = function (criterias, defaultSearchCriterias) {
    var decapitalize = function (s) {
        if (typeof s !== "string")
            return "";
        return s.charAt(0).toLowerCase() + s.slice(1);
    };
    var obj = {};
    criterias.forEach(function (c) {
        if (defaultSearchCriterias &&
            defaultSearchCriterias[decapitalize(c.criteria)]) {
            obj[c.criteria] = defaultSearchCriterias[decapitalize(c.criteria)];
        }
        else {
            obj[c.criteria] = {
                value: c.type === FilterCriteriaInfoTypeEnum.Date
                    ? undefined
                    : c.type === FilterCriteriaInfoTypeEnum.List &&
                        c.listValues.length > 0
                        ? c.listValues[0].idValue
                        : "",
                secondaryValue: undefined,
                searchMode: c.defaultSearchMode
            };
        }
    });
    return obj;
};
export var SearchCriteriaForm = function (_a) {
    var criterias = _a.criterias, _b = _a.defaultVisibleCriterias, defaultVisibleCriterias = _b === void 0 ? [] : _b, onSearch = _a.onSearch, tlDataPrefix = _a.tlDataPrefix, _c = _a.overrideListValues, overrideListValues = _c === void 0 ? {} : _c, _d = _a.defaultSearchCriterias, defaultSearchCriterias = _d === void 0 ? undefined : _d, triggerInitialSearch = _a.triggerInitialSearch;
    var capitalize = function (s) {
        if (typeof s !== "string")
            return "";
        return s.charAt(0).toUpperCase() + s.slice(1);
    };
    var _e = __read(useState(getInitialState(criterias, defaultSearchCriterias)), 2), formState = _e[0], setFormState = _e[1];
    var _f = __read(React.useState(), 2), initialSearchDone = _f[0], setinitialSearchDone = _f[1];
    var _g = __read(useState(defaultSearchCriterias &&
        Object.keys(defaultSearchCriterias).filter(function (c) { return !["filter", "sortKey", "forceTake", "forceSkip"].includes(c); }).length > 0
        ? __spread(Object.keys(defaultSearchCriterias)
            .filter(function (c) {
            return !["filter", "sortKey", "forceTake", "forceSkip"].includes(c);
        })
            .map(function (c) { return capitalize(c); })) : defaultVisibleCriterias), 2), visibleCriterias = _g[0], setVisibleCriterias = _g[1];
    var t = useTranslation().t;
    var search = React.useCallback(function () {
        onSearch(filterFormStateValues(formState, visibleCriterias));
    }, [formState, onSearch, visibleCriterias]);
    React.useEffect(function () {
        if (Object.keys(formState).length > 0 &&
            !initialSearchDone &&
            triggerInitialSearch) {
            setinitialSearchDone(true);
            search();
        }
    }, [formState, initialSearchDone, search, triggerInitialSearch]);
    return (React.createElement(Container, null,
        React.createElement(FormAlignContainer, { onKeyDown: function (e) {
                return e.keyCode === 13 &&
                    onSearch(filterFormStateValues(formState, visibleCriterias));
            } }, criterias
            .filter(function (v) { return visibleCriterias.includes(v.criteria); })
            .map(function (c) { return (React.createElement(FilterCriteriaBase, { tlDataPrefix: tlDataPrefix, criteria: c, key: c.criteria, value: formState[c.criteria], onValueChange: function (v) {
                return setFormState(function (s) {
                    var _a;
                    return (__assign(__assign({}, s), (_a = {}, _a[c.criteria] = v, _a)));
                });
            }, overrideListValue: overrideListValues[c.criteria], onRemove: function (v) {
                var nextCriterias = visibleCriterias.filter(function (vi) { return vi !== v; });
                setVisibleCriterias(nextCriterias);
                //onSearch(filterFormStateValues(formState, nextCriterias));
            } })); })),
        React.createElement(BottomButtonsContainer, null,
            React.createElement(Popover, { minimal: true, content: React.createElement(Menu, null, criterias
                    .filter(function (c) { return !visibleCriterias.includes(c.criteria); })
                    .map(function (vi) { return (React.createElement(MenuItem, { key: vi.criteria, text: t("" + (tlDataPrefix ? tlDataPrefix + "_" : "") + vi.criteria), onClick: function () {
                        return setVisibleCriterias(__spread(visibleCriterias, [vi.criteria]));
                    } })); })), position: Position.RIGHT_TOP },
                React.createElement(Button, { icon: IconNames.PLUS, minimal: true, intent: Intent.PRIMARY, text: t("SearchCriteriaPanel_AddCriteria"), disabled: visibleCriterias.length === criterias.length })),
            React.createElement(Button, { icon: IconNames.SEARCH, text: t("SearchCriteriaPanel_Search"), intent: Intent.PRIMARY, onClick: function (e) {
                    e.preventDefault();
                    search();
                } }))));
};
function filterFormStateValues(state, criteria) {
    var finalState = {};
    criteria.forEach(function (c) { return (finalState[voca.decapitalize(c)] = state[c]); });
    return finalState;
}
var templateObject_1, templateObject_2, templateObject_3;
