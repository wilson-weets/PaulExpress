var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from "react";
import { NonIdealState, Callout, Intent, Classes } from "@blueprintjs/core";
import { IconNames } from "@blueprintjs/icons";
import styled from "styled-components";
var CustomNonIdealState = styled(NonIdealState)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  & .", " {\n    max-width: 80% !important;\n  }\n"], ["\n  & .", " {\n    max-width: 80% !important;\n  }\n"])), Classes.NON_IDEAL_STATE);
var ErrorBoundary = /** @class */ (function (_super) {
    __extends(ErrorBoundary, _super);
    function ErrorBoundary() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            hasError: false
        };
        return _this;
    }
    ErrorBoundary.getDerivedStateFromError = function (error) {
        // Update state so the next render will show the fallback UI.
        return { hasError: true, error: error };
    };
    ErrorBoundary.prototype.componentDidCatch = function (error, info) {
        // You can also log the error to an error reporting service
        // logErrorToMyService(error, info);
    };
    ErrorBoundary.prototype.render = function () {
        if (this.state.hasError) {
            // You can render any custom fallback UI
            return (React.createElement(CustomNonIdealState, { title: "An Error has occured", icon: IconNames.DELETE },
                React.createElement(Callout, { intent: Intent.DANGER, title: this.state.error.message, style: { textAlign: "left" } }, this.state.error.stack)));
        }
        return this.props.children;
    };
    return ErrorBoundary;
}(React.Component));
export { ErrorBoundary };
var templateObject_1;
