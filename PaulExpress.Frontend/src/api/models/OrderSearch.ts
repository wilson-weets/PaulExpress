// tslint:disable
// eslint-disable
/**
 * PaulExpress API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import { AggregateKeyInfo, AggregateKeyInfoFromJSON, AggregateKeyInfoFromJSONTyped, AggregateKeyInfoToJSON } from "./";

/**
 *
 * @export
 * @interface OrderSearch
 */
export interface OrderSearch {
  /**
   *
   * @type {number}
   * @memberof OrderSearch
   */
  pageNumber?: number;
  /**
   *
   * @type {number}
   * @memberof OrderSearch
   */
  pageSize?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof OrderSearch
   */
  sortKey?: Array<string> | null;
  /**
   *
   * @type {number}
   * @memberof OrderSearch
   */
  readonly skipCount?: number;
  /**
   *
   * @type {Array<AggregateKeyInfo>}
   * @memberof OrderSearch
   */
  aggregateKeys?: Array<AggregateKeyInfo> | null;
  /**
   *
   * @type {number}
   * @memberof OrderSearch
   */
  forceSkip?: number | null;
  /**
   *
   * @type {number}
   * @memberof OrderSearch
   */
  forceTake?: number | null;
  /**
   *
   * @type {string}
   * @memberof OrderSearch
   */
  filter?: string | null;
}

export function OrderSearchFromJSON(json: any): OrderSearch {
  return OrderSearchFromJSONTyped(json, false);
}

export function OrderSearchFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderSearch {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    pageNumber: !exists(json, "pageNumber") ? undefined : json["pageNumber"],
    pageSize: !exists(json, "pageSize") ? undefined : json["pageSize"],
    sortKey: !exists(json, "sortKey") ? undefined : json["sortKey"],
    skipCount: !exists(json, "skipCount") ? undefined : json["skipCount"],
    aggregateKeys: !exists(json, "aggregateKeys")
      ? undefined
      : json["aggregateKeys"] === null
      ? null
      : (json["aggregateKeys"] as Array<any>).map(AggregateKeyInfoFromJSON),
    forceSkip: !exists(json, "forceSkip") ? undefined : json["forceSkip"],
    forceTake: !exists(json, "forceTake") ? undefined : json["forceTake"],
    filter: !exists(json, "filter") ? undefined : json["filter"]
  };
}

export function OrderSearchToJSON(value?: OrderSearch | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    pageNumber: value.pageNumber,
    pageSize: value.pageSize,
    sortKey: value.sortKey,
    aggregateKeys:
      value.aggregateKeys === undefined
        ? undefined
        : value.aggregateKeys === null
        ? null
        : (value.aggregateKeys as Array<any>).map(AggregateKeyInfoToJSON),
    forceSkip: value.forceSkip,
    forceTake: value.forceTake,
    filter: value.filter
  };
}
