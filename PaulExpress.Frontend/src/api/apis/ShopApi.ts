// tslint:disable
// eslint-disable
/**
 * PaulExpress API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import { SandwichDto, SandwichDtoFromJSON, SandwichDtoToJSON } from "../models";

export interface ShopApiApiShopSandwichShopIdGetRequest {
  shopId: number;
}

/**
 * no description
 */
export class ShopApi extends runtime.BaseAPI {
  /**
   */
  async apiShopSandwichShopIdGetRaw(
    requestParameters: ShopApiApiShopSandwichShopIdGetRequest
  ): Promise<runtime.ApiResponse<Array<SandwichDto>>> {
    if (requestParameters.shopId === null || requestParameters.shopId === undefined) {
      throw new runtime.RequiredError(
        "shopId",
        "Required parameter requestParameters.shopId was null or undefined when calling apiShopSandwichShopIdGet."
      );
    }

    const queryParameters: runtime.HTTPQuery = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.apiKey) {
      headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
    }

    const response = await this.request({
      path: `/api/Shop/sandwich/{shopId}`.replace(
        `{${"shopId"}}`,
        encodeURIComponent(String(requestParameters.shopId))
      ),
      method: "GET",
      headers: headerParameters,
      query: queryParameters
    });

    return new runtime.JSONApiResponse(response, jsonValue => jsonValue.map(SandwichDtoFromJSON));
  }

  /**
   */
  async apiShopSandwichShopIdGet(
    requestParameters: ShopApiApiShopSandwichShopIdGetRequest
  ): Promise<Array<SandwichDto>> {
    const response = await this.apiShopSandwichShopIdGetRaw(requestParameters);
    return await response.value();
  }
}
