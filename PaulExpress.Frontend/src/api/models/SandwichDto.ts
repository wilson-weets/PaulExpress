// tslint:disable
// eslint-disable
/**
 * PaulExpress API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface SandwichDto
 */
export interface SandwichDto {
  /**
   *
   * @type {number}
   * @memberof SandwichDto
   */
  sandwichId?: number;
  /**
   *
   * @type {string}
   * @memberof SandwichDto
   */
  name?: string | null;
  /**
   *
   * @type {string}
   * @memberof SandwichDto
   */
  category?: string | null;
  /**
   *
   * @type {string}
   * @memberof SandwichDto
   */
  ingredients?: string | null;
  /**
   *
   * @type {number}
   * @memberof SandwichDto
   */
  unitPrice?: number;
  /**
   *
   * @type {boolean}
   * @memberof SandwichDto
   */
  canSelectSauce?: boolean;
  /**
   *
   * @type {string}
   * @memberof SandwichDto
   */
  createdBy?: string | null;
  /**
   *
   * @type {Date}
   * @memberof SandwichDto
   */
  createdOn?: Date;
  /**
   *
   * @type {string}
   * @memberof SandwichDto
   */
  updatedBy?: string | null;
  /**
   *
   * @type {Date}
   * @memberof SandwichDto
   */
  updatedOn?: Date;
}

export function SandwichDtoFromJSON(json: any): SandwichDto {
  return SandwichDtoFromJSONTyped(json, false);
}

export function SandwichDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SandwichDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    sandwichId: !exists(json, "sandwichId") ? undefined : json["sandwichId"],
    name: !exists(json, "name") ? undefined : json["name"],
    category: !exists(json, "category") ? undefined : json["category"],
    ingredients: !exists(json, "ingredients") ? undefined : json["ingredients"],
    unitPrice: !exists(json, "unitPrice") ? undefined : json["unitPrice"],
    canSelectSauce: !exists(json, "canSelectSauce") ? undefined : json["canSelectSauce"],
    createdBy: !exists(json, "createdBy") ? undefined : json["createdBy"],
    createdOn: !exists(json, "createdOn") ? undefined : new Date(json["createdOn"]),
    updatedBy: !exists(json, "updatedBy") ? undefined : json["updatedBy"],
    updatedOn: !exists(json, "updatedOn") ? undefined : new Date(json["updatedOn"])
  };
}

export function SandwichDtoToJSON(value?: SandwichDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    sandwichId: value.sandwichId,
    name: value.name,
    category: value.category,
    ingredients: value.ingredients,
    unitPrice: value.unitPrice,
    canSelectSauce: value.canSelectSauce,
    createdBy: value.createdBy,
    createdOn: value.createdOn === undefined ? undefined : value.createdOn.toISOString(),
    updatedBy: value.updatedBy,
    updatedOn: value.updatedOn === undefined ? undefined : value.updatedOn.toISOString()
  };
}
