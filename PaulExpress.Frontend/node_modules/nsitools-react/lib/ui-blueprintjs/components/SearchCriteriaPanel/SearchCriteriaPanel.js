var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
import * as React from "react";
import { Spinner, Tag, Intent } from "@blueprintjs/core";
import { SearchCriteriaForm } from "./SearchCriteriaForm";
import { IconNames } from "@blueprintjs/icons";
import { useApiEffect } from "../../../core";
export var SearchCriteriaPanel = function (_a) {
    var searchFunc = _a.searchFunc, otherProps = __rest(_a, ["searchFunc"]);
    var _b = __read(useApiEffect(function () { return searchFunc(); }), 4), criterias = _b[0], loading = _b[1], error = _b[2], trigger = _b[3];
    if (error) {
        return (React.createElement(Tag, { fill: true, intent: Intent.DANGER, large: true, icon: IconNames.ERROR, onClick: function () { return trigger(); }, interactive: true },
            "Unable to get search criterias (",
            error,
            "), click here to retry..."));
    }
    else if (!criterias || loading) {
        return React.createElement(Spinner, null);
    }
    else {
        return React.createElement(SearchCriteriaForm, __assign({ criterias: criterias }, otherProps));
    }
};
