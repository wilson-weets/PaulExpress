var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import * as React from "react";
import styled from "styled-components";
import { Classes } from "@blueprintjs/core";
var Container = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  & .", " {\n    width: 100%;\n  }\n  & .", " {\n    min-width: ", ";\n    text-align: ", ";\n  }\n"], ["\n  & .", " {\n    width: 100%;\n  }\n  & .", " {\n    min-width: ", ";\n    text-align: ", ";\n  }\n"])), Classes.FORM_CONTENT, Classes.LABEL, function (props) { return props.minWidth + "px"; }, function (props) { return props.alignment; });
export var FormAlignContainer = function (_a) {
    var _b = _a.minWidth, minWidth = _b === void 0 ? 150 : _b, _c = _a.alignment, alignment = _c === void 0 ? "right" : _c, children = _a.children;
    return (React.createElement(Container, { minWidth: minWidth, alignment: alignment }, children));
};
var templateObject_1;
