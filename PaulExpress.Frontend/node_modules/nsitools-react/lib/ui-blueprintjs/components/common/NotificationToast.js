var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { Toaster, Position, Intent } from "@blueprintjs/core";
var toast = Toaster.create({
    position: Position.BOTTOM_RIGHT
});
export function showError(message, options) {
    toast.show(__assign({ message: message, intent: Intent.DANGER }, options));
}
export function showInfo(message, options) {
    toast.show(__assign({ message: message, intent: Intent.PRIMARY }, options));
}
export function showSuccess(message, options) {
    toast.show(__assign({ message: message, intent: Intent.SUCCESS }, options));
}
